{"version":3,"file":"static/js/758.e0623539.chunk.js","mappings":"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","sources":["store/contacts/selectors.js","store/filter/selectors.js","store/selectors.js","hooks/useContacts.js","components/ContactForm/validationSchema.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n","export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from './contacts/selectors';\nimport { selectFilter } from './filter/selectors';\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'store/contacts/selectors';\nimport { selectFilter } from 'store/filter/selectors';\nimport { selectFilteredContacts } from 'store/selectors';\nimport * as operations from 'store/contacts/operations';\nimport * as actions from 'store/filter/filter-reducer';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  //   const error = useSelector(selectError);\n  //   const isLoading = useSelector(selectLoading);\n\n  const dispatch = useDispatch();\n\n  const fetchContacts = useCallback(\n    () => dispatch(operations.fetchContacts()),\n    [dispatch]\n  );\n  const addContact = newContact => dispatch(operations.addContact(newContact));\n  const deleteContact = id => dispatch(operations.deleteContact(id));\n  const patchContact = updatedContact =>\n    dispatch(operations.patchContact(updatedContact));\n\n  const setFilter = value => dispatch(actions.setFilter(value));\n\n  return {\n    contacts,\n    filter,\n    filteredContacts,\n    fetchContacts,\n    addContact,\n    deleteContact,\n    patchContact,\n    setFilter,\n  };\n};\n","import * as yup from 'yup';\n\nexport const validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .nullable(true)\n    .transform((value, startValue) => (startValue.trim() === '' ? null : value))\n    .required('This field is required'),\n\n  number: yup\n    .string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('This field is required'),\n});\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormContainer = styled.div`\n  text-align: center;\n`;\n\nexport const FormEl = styled(Form)`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 32px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  align-items: start;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 24px;\n  transition: color 250ms ease;\n\n  &:hover,\n  &:focus {\n    color: #3160cd;\n  }\n`;\n\nexport const FormInput = styled(Field)`\n  width: 700px;\n  font-size: 24px;\n  border-radius: 20px;\n  border: 1px solid #959595;\n  padding: 16px;\n  outline: none;\n  transition: border-color 250ms ease, box-shadow 250ms ease;\n\n  &::placeholder {\n    color: #959595;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    border-color: #3160cd;\n    box-shadow: 0px 1px 7px 1px #4e4e4e;\n  }\n`;\n\nexport const ErrorMessageForUser = styled(ErrorMessage)`\n  width: 700px;\n  text-align: justify;\n  font-size: 18px;\n`;\n\nexport const FormButton = styled.button`\n  position: relative;\n  display: inline-block;\n  color: #777674;\n  font-size: 24px;\n  font-weight: bold;\n  text-shadow: rgba(255, 255, 255, 0.5) 1px 1px,\n    rgba(100, 100, 100, 0.3) 3px 7px 3px;\n  user-select: none;\n  padding: 16px 32px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  border-radius: 3px / 100%;\n  background-image: linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0) 30%,\n      rgba(255, 255, 255, 0.8),\n      rgba(255, 255, 255, 0) 70%\n    ),\n    linear-gradient(\n      to right,\n      rgba(255, 255, 255, 1),\n      rgba(255, 255, 255, 0) 10%,\n      rgba(255, 255, 255, 0) 90%,\n      rgba(255, 255, 255, 0.3)\n    ),\n    linear-gradient(\n      to right,\n      rgba(125, 125, 125, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(125, 125, 125, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(125, 125, 125, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(125, 125, 125, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(223, 190, 170, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(223, 190, 170, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(223, 190, 170, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(223, 190, 170, 0.5)\n    );\n  background-repeat: no-repeat;\n  background-size: 200% 100%, auto, 100% 2px, 100% 2px, 100% 1px, 100% 1px;\n  background-position: 200% 0, 0 0, 0 0, 0 100%, 0 4px, 0 calc(100% - 4px);\n  box-shadow: rgba(0, 0, 0, 0.5) 3px 10px 10px -10px;\n  backdrop-filter: blur(6px);\n\n  &:hover,\n  &:focus {\n    transition: 0.5s linear;\n    background-position: -200% 0, 0 0, 0 0, 0 100%, 0 4px, 0 calc(100% - 4px);\n  }\n`;\n","import { Formik } from 'formik';\nimport { validationSchema } from './validationSchema';\nimport {\n  FormContainer,\n  FormEl,\n  FormLabel,\n  FormInput,\n  ErrorMessageForUser,\n  FormButton,\n} from './ContactForm.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const ContactForm = () => {\n  const { contacts, addContact } = useContacts();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const isExist = contacts.some(\n      ({ name }) => name.toLowerCase() === values.name.toLowerCase()\n    );\n\n    if (isExist) {\n      alert(`${values.name} is already in contacts.`);\n      return;\n    }\n    addContact({ ...values });\n    resetForm();\n  };\n\n  return (\n    <FormContainer>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        {formik => (\n          <FormEl onSubmit={formik.handleSubmit}>\n            <FormLabel htmlFor=\"name\">\n              Name\n              <FormInput\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Please enter name...\"\n                onChange={formik.handleChange}\n                value={formik.values.name}\n              />\n              <ErrorMessageForUser name=\"name\" component=\"div\" />\n            </FormLabel>\n            <FormLabel htmlFor=\"number\">\n              Phone number\n              <FormInput\n                type=\"tel\"\n                name=\"number\"\n                placeholder=\"Please enter a phone number...\"\n                value={formik.values.number}\n                onChange={formik.handleChange}\n              />\n              <ErrorMessageForUser name=\"number\" component=\"div\" />\n            </FormLabel>\n            <FormButton type=\"submit\" disabled={formik.isSubmitting}>\n              Add contact\n            </FormButton>\n          </FormEl>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const ContactData = styled.span`\n  display: inline-block;\n`;\n\nexport const DeleteButton = styled.button`\n  position: relative;\n  color: #777674;\n  display: block;\n  width: 180px;\n  font-size: 16px;\n  font-weight: bold;\n  text-shadow: rgba(255, 255, 255, 0.5) 1px 1px,\n    rgba(100, 100, 100, 0.3) 3px 7px 3px;\n  user-select: none;\n  padding: 8px 16px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  border-radius: 3px / 100%;\n  background-image: linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0) 30%,\n      rgba(255, 255, 255, 0.8),\n      rgba(255, 255, 255, 0) 70%\n    ),\n    linear-gradient(\n      to right,\n      rgba(255, 255, 255, 1),\n      rgba(255, 255, 255, 0) 10%,\n      rgba(255, 255, 255, 0) 90%,\n      rgba(255, 255, 255, 0.3)\n    ),\n    linear-gradient(\n      to right,\n      rgba(125, 125, 125, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(125, 125, 125, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(125, 125, 125, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(125, 125, 125, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(223, 190, 170, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(223, 190, 170, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(223, 190, 170, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(223, 190, 170, 0.5)\n    );\n  background-repeat: no-repeat;\n  background-size: 200% 100%, auto, 100% 2px, 100% 2px, 100% 1px, 100% 1px;\n  background-position: 200% 0, 0 0, 0 0, 0 100%, 0 4px, 0 calc(100% - 4px);\n  box-shadow: rgba(0, 0, 0, 0.5) 3px 10px 10px -10px;\n  backdrop-filter: blur(6px);\n\n  &:hover,\n  &:focus {\n    transition: 0.5s linear;\n    background-position: -200% 0, 0 0, 0 0, 0 100%, 0 4px, 0 calc(100% - 4px);\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useContacts } from 'hooks/useContacts';\nimport {\n  ContactsWrapper,\n  ContactData,\n  DeleteButton,\n} from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const { deleteContact, patchContact, ContactName, ContactNumber } =\n    useContacts();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedName, setEditedName] = useState(name);\n  const [editedNumber, setEditedNumber] = useState(number);\n\n  const handleNameChange = e => {\n    setEditedName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setEditedNumber(e.target.value);\n  };\n\n  const handleSaveContact = () => {\n    const updatedContact = {\n      id,\n      name: editedName,\n      number: editedNumber,\n    };\n    patchContact(updatedContact)\n      .then(() => {\n        setIsEditing(false);\n      })\n      .catch(error => console.error('Error updating contact:', error.message));\n  };\n\n  const handleCancelEdit = () => {\n    setEditedName(ContactName);\n    setEditedNumber(ContactNumber);\n    setIsEditing(false);\n  };\n\n  const renderEditMode = () => {\n    return (\n      <>\n        <input type=\"text\" value={editedName} onChange={handleNameChange} />\n        <input type=\"text\" value={editedNumber} onChange={handleNumberChange} />\n        <button type=\"button\" onClick={handleSaveContact}>\n          Save\n        </button>\n        <button type=\"button\" onClick={handleCancelEdit}>\n          Cancel\n        </button>\n      </>\n    );\n  };\n\n  const renderViewMode = () => {\n    return (\n      <>\n        <ContactsWrapper>\n          <ContactData onClick={() => setIsEditing(true)}>{name}</ContactData>\n          <ContactData onClick={() => setIsEditing(true)}>{number}</ContactData>\n        </ContactsWrapper>\n        <DeleteButton type=\"button\" onClick={() => deleteContact(id)}>\n          Delete contact\n        </DeleteButton>\n      </>\n    );\n  };\n  return <>{isEditing ? renderEditMode() : renderViewMode()}</>;\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 24px;\n\n  & + & {\n    margin-top: 16px;\n  }\n`;\n","import React from 'react';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List, ListItem } from './ContactList.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const ContactList = () => {\n  const { filteredContacts } = useContacts();\n\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <ContactItem id={id} name={name} number={number} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterBox = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 48px;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 24px;\n  transition: color 250ms ease;\n\n  &:hover,\n  &:focus {\n    color: #3160cd;\n  }\n`;\n\nexport const FilterInput = styled.input`\n  width: 700px;\n  font-size: 24px;\n  border-radius: 20px;\n  border: 1px solid #959595;\n  outline: none;\n  padding: 16px;\n  transition: border-color 250ms ease, box-shadow 250ms ease;\n\n  &::placeholder {\n    color: #959595;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    border-color: #3160cd;\n    box-shadow: 0px 1px 7px 1px #4e4e4e;\n  }\n`;\n","import React from 'react';\nimport { FilterBox, FilterLabel, FilterInput } from './Filter.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const Filter = () => {\n  const { filter, setFilter } = useContacts();\n\n  return (\n    <FilterBox>\n      <FilterLabel>\n        Find contacts by name:\n        <FilterInput\n          type=\"text\"\n          placeholder=\"Please enter name...\"\n          value={filter}\n          onChange={event => setFilter(event.currentTarget.value)}\n        />\n      </FilterLabel>\n    </FilterBox>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  text-align: center;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const SubTitle = styled.h2`\n  font-size: 32px;\n  text-align: center;\n`;\n\nexport const MessageEmptyList = styled.p`\n  font-size: 24px;\n  text-align: center;\n`;\n","import { useEffect } from 'react';\nimport { useContacts } from 'hooks/useContacts';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Title, SubTitle, MessageEmptyList } from './Contacts.styled';\n\nconst Contacts = () => {\n  const { contacts, fetchContacts } = useContacts();\n\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts]);\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <SubTitle>Contacts</SubTitle>\n      {!!contacts.length ? (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <MessageEmptyList>\n          Unfortunately, there is no contact here. Please enter your first\n          contact\n        </MessageEmptyList>\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","useContacts","useSelector","filteredContacts","dispatch","useDispatch","fetchContacts","useCallback","operations","addContact","newContact","deleteContact","id","patchContact","updatedContact","setFilter","value","actions","validationSchema","yup","shape","matches","nullable","transform","startValue","trim","required","number","FormContainer","styled","FormEl","Form","FormLabel","FormInput","Field","ErrorMessageForUser","ErrorMessage","FormButton","ContactForm","initialValues","onSubmit","values","resetForm","some","alert","formik","handleSubmit","htmlFor","type","placeholder","onChange","handleChange","component","disabled","isSubmitting","ContactsWrapper","ContactData","DeleteButton","ContactItem","ContactName","ContactNumber","useState","isEditing","setIsEditing","editedName","setEditedName","editedNumber","setEditedNumber","handleNameChange","e","target","handleNumberChange","handleSaveContact","then","catch","error","console","message","handleCancelEdit","onClick","List","ListItem","ContactList","map","FilterBox","FilterLabel","FilterInput","Filter","event","currentTarget","Title","SubTitle","MessageEmptyList","useEffect","length"],"sourceRoot":""}